{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortByAlphabet","setState","ALPABET","sortByLength","LENGTH","reverse","reset","this","goods","visibleGoods","sort","good1","good2","localeCompare","length","console","log","getReorderedGoods","className","type","classNames","onClick","map","item","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBYA,E,wGAbCC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGUD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAuDL,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CAAEH,SAAUL,EAASS,WAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,QAAU,WACR,EAAKJ,UAAS,SAACL,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBAhBzB,EAoBES,MAAQ,WACN,EAAKL,SAAS,CAAEJ,YAAY,EAAOC,SAAUL,EAASM,QArB1D,4CAwBE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEdU,EAtEH,SACLA,EADK,GAGJ,IADCV,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNY,EAAY,YAAOD,GAuBzB,OArBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQd,GACN,KAAML,EAASS,QACb,OAAOS,EAAME,cAAcD,GAE7B,KAAMnB,EAASW,OACb,OAAOO,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAITjB,GACFY,EAAaJ,UAKfU,QAAQC,IAAIlB,EAAUD,GAEfY,EA0CSQ,CAAkBvB,EAAiB,CAAEI,WAAUD,eAE7D,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SAAU,aAAc,CACtB,WAAYb,KAAKX,MAAME,WAAaL,EAASS,UAGjDmB,QAASd,KAAKP,eAPhB,iCAYA,wBACEmB,KAAK,SACLD,UAAWE,IACT,SAAU,aAAc,CACtB,WAAYb,KAAKX,MAAME,WAAaL,EAASW,SAGjDiB,QAASd,KAAKJ,aAPhB,4BAYA,wBACEgB,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,YAAab,KAAKX,MAAMC,aAE1BwB,QAASd,KAAKF,QALhB,sBAUEE,KAAKX,MAAME,WAAaL,EAASM,OACJ,IAA1BQ,KAAKX,MAAMC,aAEZ,wBACEsB,KAAK,SACLD,UAAU,4BACVG,QAASd,KAAKD,MAHhB,sBAUN,6BACE,6BACGE,EAAMc,KAAI,SAACC,GAAD,OACT,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,iBAlFtC,GAAyBC,IAAMC,WCtE/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3efeb3fd.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport enum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case (SortType.ALPABET):\n        return good1.localeCompare(good2);\n\n      case (SortType.LENGTH):\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\n// type State = {\n//   isReversed: boolean,\n//   sortType: SortType,\n// };\ntype Props = {};\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<Props, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({ isReversed: false, sortType: SortType.NONE });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button', 'is-success', {\n                'is-light': this.state.sortType !== SortType.ALPABET,\n              },\n            )}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button', 'is-success', {\n                'is-light': this.state.sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-warning', {\n              'is-light': !this.state.isReversed,\n            })}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(this.state.sortType !== SortType.NONE\n            || this.state.isReversed === true)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map((item) => (\n              <li data-cy=\"Good\" key={item}>{item}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}